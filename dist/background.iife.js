(function(){"use strict";var F=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},L={exports:{}};(function(c,o){(function(p,u){u(c)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:F,function(p){if(!(globalThis.chrome&&globalThis.chrome.runtime&&globalThis.chrome.runtime.id))throw new Error("This script should only be loaded in a browser extension.");if(globalThis.browser&&globalThis.browser.runtime&&globalThis.browser.runtime.id)p.exports=globalThis.browser;else{const u="The message port closed before a response was received.",x=m=>{const f={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(f).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class y extends WeakMap{constructor(s,n=void 0){super(n),this.createItem=s}get(s){return this.has(s)||this.set(s,this.createItem(s)),super.get(s)}}const w=e=>e&&typeof e=="object"&&typeof e.then=="function",b=(e,s)=>(...n)=>{m.runtime.lastError?e.reject(new Error(m.runtime.lastError.message)):s.singleCallbackArg||n.length<=1&&s.singleCallbackArg!==!1?e.resolve(n[0]):e.resolve(n)},h=e=>e==1?"argument":"arguments",T=(e,s)=>function(g,...a){if(a.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${h(s.minArgs)} for ${e}(), got ${a.length}`);if(a.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${h(s.maxArgs)} for ${e}(), got ${a.length}`);return new Promise((i,A)=>{if(s.fallbackToNoCallback)try{g[e](...a,b({resolve:i,reject:A},s))}catch(r){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,r),g[e](...a),s.fallbackToNoCallback=!1,s.noCallback=!0,i()}else s.noCallback?(g[e](...a),i()):g[e](...a,b({resolve:i,reject:A},s))})},R=(e,s,n)=>new Proxy(s,{apply(g,a,i){return n.call(a,e,...i)}});let v=Function.call.bind(Object.prototype.hasOwnProperty);const E=(e,s={},n={})=>{let g=Object.create(null),a={has(A,r){return r in e||r in g},get(A,r,l){if(r in g)return g[r];if(!(r in e))return;let t=e[r];if(typeof t=="function")if(typeof s[r]=="function")t=R(e,e[r],s[r]);else if(v(n,r)){let k=T(r,n[r]);t=R(e,e[r],k)}else t=t.bind(e);else if(typeof t=="object"&&t!==null&&(v(s,r)||v(n,r)))t=E(t,s[r],n[r]);else if(v(n,"*"))t=E(t,s[r],n["*"]);else return Object.defineProperty(g,r,{configurable:!0,enumerable:!0,get(){return e[r]},set(k){e[r]=k}}),t;return g[r]=t,t},set(A,r,l,t){return r in g?g[r]=l:e[r]=l,!0},defineProperty(A,r,l){return Reflect.defineProperty(g,r,l)},deleteProperty(A,r){return Reflect.deleteProperty(g,r)}},i=Object.create(e);return new Proxy(i,a)},S=e=>({addListener(s,n,...g){s.addListener(e.get(n),...g)},hasListener(s,n){return s.hasListener(e.get(n))},removeListener(s,n){s.removeListener(e.get(n))}}),j=new y(e=>typeof e!="function"?e:function(n){const g=E(n,{},{getContent:{minArgs:0,maxArgs:0}});e(g)}),$=new y(e=>typeof e!="function"?e:function(n,g,a){let i=!1,A,r=new Promise(C=>{A=function(d){i=!0,C(d)}}),l;try{l=e(n,g,A)}catch(C){l=Promise.reject(C)}const t=l!==!0&&w(l);if(l!==!0&&!t&&!i)return!1;const k=C=>{C.then(d=>{a(d)},d=>{let N;d&&(d instanceof Error||typeof d.message=="string")?N=d.message:N="An unexpected error occurred",a({__mozWebExtensionPolyfillReject__:!0,message:N})}).catch(d=>{console.error("Failed to send onMessage rejected reply",d)})};return k(t?l:r),!0}),B=({reject:e,resolve:s},n)=>{m.runtime.lastError?m.runtime.lastError.message===u?s():e(new Error(m.runtime.lastError.message)):n&&n.__mozWebExtensionPolyfillReject__?e(new Error(n.message)):s(n)},O=(e,s,n,...g)=>{if(g.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${h(s.minArgs)} for ${e}(), got ${g.length}`);if(g.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${h(s.maxArgs)} for ${e}(), got ${g.length}`);return new Promise((a,i)=>{const A=B.bind(null,{resolve:a,reject:i});g.push(A),n.sendMessage(...g)})},I={devtools:{network:{onRequestFinished:S(j)}},runtime:{onMessage:S($),onMessageExternal:S($),sendMessage:O.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:O.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},M={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return f.privacy={network:{"*":M},services:{"*":M},websites:{"*":M}},E(m,I,f)};p.exports=x(chrome)}})})(L);const P=(c,o)=>{chrome.tabs.sendMessage(o,{action:"generatedCommentDelta",delta:c})},D=async(c,o,p,u)=>{const{authInfo:x}=await chrome.storage.local.get("authInfo");try{const m=await fetch("https://algoclan-extension-46b54a91a23b.herokuapp.com/api/ai/comment",{method:"POST",headers:{Accept:"text/event-stream",Authorization:`Bearer ${x.token}`,"Content-Type":"application/json"},body:JSON.stringify({personaId:o,linkedinPost:c})}),f=m.body.getReader(),y=new TextDecoder;console.log("response",m);let w=!1;for(;!w;){const{done:b,value:h}=await f.read(),T=y.decode(h);console.log(T),P(T,u),b&&(w=!0)}}catch(m){console.log({e:m})}},_=async({postHeader:c,postContent:o,commentThread:p,replyingTo:u},x)=>{var h;const{selectedPersonaId:m,selectedCommentTypeId:f}=await chrome.storage.sync.get(["selectedPersonaId","selectedCommentTypeId"]),{commentTypes:y}=await chrome.storage.local.get("commentTypes"),w=(h=y.find(T=>T._id===f))==null?void 0:h.prompt;console.log("commentTypePrompt: ",w,f,y);let b=`
    POST HEADER: 
    ${c}
    ------------------------------
    POST CONTENT: 
    ${o}
    ------------------------------
  `;p&&(b+=`
      COMMENT THREAD:
      ${p}
      ------------------------------
      `),b+=`
    REPLYING TO: 
    ${u}
  `,w&&(b+=`

${w}`),P("<clear>",x),await D(b,m,f,x),P("<end>",x),chrome.tabs.sendMessage(x,{action:"commentGenerationDone"})};chrome.runtime.onMessage.addListener((c,o,p)=>{var u,x;if(c.action==="initiateGenerate"){if(((u=o.tab)==null?void 0:u.id)===void 0)return;chrome.tabs.sendMessage(o.tab.id,{action:"getDataForCommentGeneration"})}else c.action==="commentGenerationData"&&_(c.data,((x=o==null?void 0:o.tab)==null?void 0:x.id)||0)})})();
